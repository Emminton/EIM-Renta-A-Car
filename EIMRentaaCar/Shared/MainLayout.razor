@inherits LayoutComponentBase

@using Blazored.Toast.Configuration
@using BLL
@using Models
@using System.Web;
@inject AuthenticationStateProvider AuthenticationStateProvider

    <AuthorizeView>
        <Authorized>
            <div class="sidebar">
                <NavMenu />
            </div>
            <div class="main">

                <div class="top-row px-4" style="background-color: #d2d5d7">
                    <a class="btn btn-outline-danger" data-toggle="modal" data-target="#exampleModalScrollable">Perfil</a>
                    <br />
                    <a class="btn text-dark " data-toggle="modal" data-target="#ntf"><i class="fa fa-bell"></i></a>
                </div>

                <div class="content px-4">
                    @Body
                </div>
            </div>

        </Authorized>

        <NotAuthorized>
            <div class="sidebar">
                <NavMenu />
            </div>
            <div class="main">
                <div class="top-row px-4" style="background-color: #d2d5d7">
                </div>
                <div class="content px-4">
                    @Body
                </div>
            </div>
        </NotAuthorized>

    </AuthorizeView>

@if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated)
{
    <div class="modal fade" id="exampleModalScrollable" tabindex="-1" role="dialog" aria-labelledby="exampleModalScrollableTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable" role="document">
            <div class="modal-content">
                <div class="modal-header text-center">
                    <h5 class="modal-title" id="exampleModalScrollableTitle">Bienvenido/a</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <i class="oi oi-person"></i> Nombre de usuario: <span> @getUser()</span>
                    <br />
                    <i class="oi oi-wrench"></i>Rol del usuario: <span> @getRol()</span>
                </div>
                <div class="modal-footer align-items-center ">
                    <a class="ml-md-auto btn btn-danger" href="/logout?returnUrl=/" target="_top" style="color: white"><i class="oi oi-account-logout"></i> Logout</a>
                </div>
            </div>
        </div>
    </div>
}
<BlazoredToasts Position="ToastPosition.TopRight"
                Timeout="5"
                IconType="IconType.FontAwesome"
                SuccessIcon="fa fa-check"
                ErrorIcon="fa fa-times"
                InfoIcon="fa fa-info"
                WarningIcon="fa fa-warning"
                ShowProgressBar="@true" />




@code{

    private string getUser()
    {
        Usuarios usuario = UsuarioBLL.Buscar(AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.Name);

        if (usuario != null)
        {
            return usuario.Nombre;
        }
        return null;
    }

    private string getRol()
    {
        Usuarios usuario = UsuarioBLL.Buscar(AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.Name);

        if (usuario != null)
        {
            return usuario.Roles;
        }
        return null;
    }

}