@page "/Forgot"

@using BLL
@using Models

@inject IToastService toast

    <div class="container">
        <div class="d-flex justify-content-center h-100">
            <div class="user_card">
                <div class="d-flex justify-content-center">
                    <div class="brand_logo_container">
                        <img src="/Imagen/E&M.png" class="brand_logo" alt="Logo">
                    </div>
                </div>
                <div class="d-flex justify-content-center form_container">
                    <form>
                        <div class="input-group mb-3">
                            <div class="input-group-append">
                                <span class="input-group-text"><i class="fa fa-user"></i></span>
                            </div>
                            <input type="text" name="" class="form-control input_user" placeholder="Nombre de Usuario" @bind="@User">
                        </div>
                        <div class="input-group mb-2">
                            <div class="input-group-append">
                                <span class="input-group-text"><i class="fa fa-envelope"></i></span>
                            </div>
                            <input type="email" name="" @bind="@Email" class="form-control input_pass" placeholder="Email">
                        </div>
                        <div class="d-flex justify-content-center mt-3 login_container">
                            <button class="btn btn-success fa fa-send" @onclick="Enviar">&nbsp;Enviar</button>
                        </div>
                    </form>  
                </div>
            </div>
        </div>
    </div>

    <style>
        body,
        html {
            margin: 0;
            padding: 0;
            height: 100%;
            background: #d2d5d7 !important;
        }

        .user_card {
            height: 400px;
            width: 350px;
            margin-top: auto;
            margin-bottom: auto;
            background: #232121;
            position: relative;
            display: flex;
            justify-content: center;
            flex-direction: column;
            padding: 10px;
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
            -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
            -moz-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
            border-radius: 5px;
        }

        .brand_logo_container {
            position: absolute;
            height: 170px;
            width: 170px;
            top: -75px;
            border-radius: 50%;
            background: #d1d5d8;
            padding: 10px;
            text-align: center;
        }

        .brand_logo {
            height: 150px;
            width: 150px;
            border-radius: 50%;
            border: 2px solid white;
        }

        .form_container {
            margin-top: 100px;
        }

        .login_btn {
            width: 100%;
            background: #c0392b !important;
            color: white !important;
        }

            .login_btn:focus {
                box-shadow: none !important;
                outline: 0px !important;
            }

        .login_container {
            padding: 0 2rem;
        }

        .input-group-text {
            background: #c0392b !important;
            color: white !important;
            border: 0 !important;
            border-radius: 0.25rem 0 0 0.25rem !important;
        }

        .input_user,
        .input_pass:focus {
            box-shadow: none !important;
            outline: 0px !important;
        }

        .custom-checkbox .custom-control-input:checked ~ .custom-control-label::before {
            background-color: #c0392b !important;
        }
    </style>

@code {

    private int Id { get; set; }
    private string User { get; set; }
    private string Email { get; set; }
    private string NombreUsuario { get; set; }
    private string CorreoUsuario { get; set; }


    private void Enviar()
    {
        VerificarUsuario();
    }

    private void Mensaje()
    {
        string usuario = UsuarioBLL.Buscar(Id).UserName;
        string contraseña = UsuarioBLL.DesEncriptar(UsuarioBLL.Buscar(Id).Password);

        System.Net.Mail.MailMessage msg = new System.Net.Mail.MailMessage();

        msg.To.Add(Email);
        msg.Subject = "E&M Rent a Car";
        msg.SubjectEncoding = System.Text.Encoding.UTF8;
        msg.Body = $"Su nombre de usuario es: {usuario} <br/> Su contraseña es: {contraseña}";
        msg.BodyEncoding = System.Text.Encoding.UTF8;
        msg.IsBodyHtml = true;
        msg.From = new System.Net.Mail.MailAddress("lamatriz7777@gmail.com");

        System.Net.Mail.SmtpClient cliente = new System.Net.Mail.SmtpClient();

        cliente.Credentials = new System.Net.NetworkCredential("", "");// no lo usare por motivos de seguridad hasta que encuentre otra manera no usare esta

        cliente.Port = 587;
        cliente.DeliveryMethod = System.Net.Mail.SmtpDeliveryMethod.Network;
        cliente.EnableSsl = true;

        cliente.Host = "smtp.gmail.com";

        try
        {
            cliente.Send(msg);
        }
        catch (Exception)
        {
            throw;
        }


    }

    private void VerificarUsuario()
    {
        List<Usuarios> lista = UsuarioBLL.GetList(u => true);
        foreach (var item in lista)
        {
            if (item.UserName == User)
            {
                Id = item.UsuarioId;
            }
        }

        NombreUsuario = UsuarioBLL.Buscar(Id).UserName;
        CorreoUsuario = UsuarioBLL.Buscar(Id).Email;

        if (NombreUsuario == User && CorreoUsuario == Email)
        {
            Mensaje();
        }
        else
        {
            toast.ShowError("Los datos no coinciden");
        }
    }
}