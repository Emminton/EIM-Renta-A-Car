@page "/ConsultaVentas"

@using EIMRentaaCar.BLL
@using EIMRentaaCar.Models

@inject IToastService toast

<EditForm Model="lista">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h3>Consultas De Ventas</h3>
        </div>

        <div class="card-body">
            <div class="input-group mb-4">
                <div class="input-group">

                    <label for="filtro">Filtro: </label>
                    <select class="form-control ml-3 mr-3" @bind="Filtro">
                        <option value="" disabled selected>Seleccione un filtro</option>
                        <option value="Todo">Todo</option>
                        <option value="ID">Vehiculo ID</option>
                        <option value="ClienteId">ClienteId</option>
                    </select>

                    <label for="criterio ml-3 mr-3"> Criterio: </label>
                    <input type="search" class="form-control ml-3 mr-3" @bind-value="Criterio" />

                    <button type="button" class="btn btn-primary" @onclick="Buscar">Buscar </button>
                </div>
            </div>

            <table class=" table mb-3 mt-3">
                <thead class="thead-light">
                    <tr>
                        <th>Vehiculo ID</th>
                        <th>Cliente ID</th>
                        <th>Fecha </th>
                        <th>Cuotas</th>
                        <th>Balance</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in lista)
                    {
                        <tr class="table-striped">
                            <td>@item.VehiculoId</td>
                            <td>@item.ClienteId</td>
                            <td>@item.FechaVenta</td>
                            <td>@item.Cuotas</td>
                            <td>@item.Balance</td>
                        </tr>
                     }
                </tbody>
            </table>
        </div>
    </div>
</EditForm>

@code { 
    
    private List<Ventas> lista { get; set; }

    private string Filtro { get; set; }
    private string Criterio { get; set; }

    private List<Ventas> listapaginada { get; set; }

    double Paginas = 0;
    double Elementos = 0;
    int PaginaActual = 0;

    Paginacion paginacion = new Paginacion();


    protected override void OnInitialized()
    {
        lista = VentasBLL.GetList(v => true);
        Filtro = "Todo";
        IniciarPaginacion();
    }


    public void IniciarPaginacion()
    {
        PaginaActual = 1;
        Elementos = lista.Count();
        Paginas = Math.Ceiling(Elementos / paginacion.Mostrar);
        listapaginada = lista.Take(paginacion.Mostrar).ToList();
    }

    private void PaginaSiguiente()
    {
        if (PaginaActual < Paginas)
        {
            PaginaActual++;
            listapaginada = lista
                .Skip((PaginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();
        }
    }

    private void Mover()
    {
        if (PaginaActual < Paginas)
        {
            PaginaActual++;
            listapaginada = lista
                .Skip((PaginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();
        }
        else if (PaginaActual > 1)
        {
            PaginaActual--;
            listapaginada = lista
                .Skip((PaginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();
        }
    }


    private void PaginaAnterior()
    {
        if (PaginaActual > 1)
        {
            PaginaActual--;
            listapaginada = lista
                .Skip((PaginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();
        }
    }

    private void Buscar()
    {
        try
        {
            if (Filtro == null)
            {
                toast.ShowWarning("Debe seleccionar un Filtro", "Aviso");
            }
            else
            {

                if (lista.Count == 0)
                {
                    toast.ShowWarning("No hay venta registrados", "Aviso");
                }
                else
                {

                    switch (Filtro)
                    {
                        case "Todo":
                            listapaginada = VentasBLL.GetList(e => true);
                            IniciarPaginacion();
                            break;
                        case "ID":
                            listapaginada = VentasBLL.GetList(e => e.VentaId == Convert.ToInt32(Criterio));
                            break;
                        case "ClienteId":
                            listapaginada = VentasBLL.GetList(e => e.ClienteId == Convert.ToInt32(Criterio));
                            break;
                    }
                }
            }
        }
        catch (Exception)
        {
            throw;
        }
    }
}