@page "/Notify"

@using EIMRentaaCar.Models
@using EIMRentaaCar.BLL

@inject IToastService toast
@inject IJSRuntime js
@inject AuthenticationStateProvider AuthenticationStateProvider

@if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated)
{
    @foreach (var item in Datos())
    {
        @if (item.UsuarioId == getUser())
        {
            <div class="list-group w-50">
                <a class="list-group-item list-group-item-action">
                    <div class="d-flex w-100 justify-content-between">
                        @if (item.Titulo == "Error")
                        {
                            <h4 class="text-danger"><i class="fa fa-warning"></i>@item.Titulo</h4> }
                        else if (item.Titulo == "Success")
                        {
                            <h4 class="text-success"><i class="fa fa-check"></i>@item.Titulo</h4> }
                        else if (item.Titulo == "Info")
                        {
                            <h4 class="text-info"><i class="fa fa-info"></i>@item.Titulo</h4> }
                        else
                        {
                            <h4>@item.Titulo</h4>
                        }
                             <small>@item.Fecha</small>
                     </div>
                        <p>@item.Asunto</p>
                        <br />
                        <span type="button" class="btn" @onclick="(() => Eliminar(item.NotificacionId))"><i class="oi oi-trash text-danger"></i></span>
                 </a>
             </div>
           }
    }
}

@code{ Notificaciones notificaciones = new Notificaciones();


    protected override void OnInitialized()
    {
        Datos();

    }

    private int getUser()
    {
        Usuarios usuario = UsuarioBLL.Buscar(AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.Name);

        if (usuario != null)
        {
            return usuario.UsuarioId;
        }
        return 0;
    }

    private List<Notificaciones> Datos()
    {
        List<Notificaciones> lista = new List<Notificaciones>();

        try
        {
            lista = NotificacionBLL.GetList(n => true);
        }
        catch (Exception)
        {
            throw;
        }

        return lista;
    }


    private void Eliminar(int id)
    {
        bool elimino;

        elimino = NotificacionBLL.Eliminar(id);

        if (elimino)
        {
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
            toast.ShowError("No fue posible eliminar");
    }

}
