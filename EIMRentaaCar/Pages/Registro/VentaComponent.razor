@page "/Ventas"
@page "/Ventas/{VentaId:int}"

@using EIMRentaaCar.Models
@using EIMRentaaCar.BLL

@inject IToastService toast

<EditForm Model="ventas" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h1>registro de ventas</h1>
        </div>
        <div class="card-body">
            <form>

                <div class="form-row align-items-center">
                    <div class="col">
                        <div class="form-group">
                            <label>ID</label>
                            <div class="input-group">
                                <InputNumber @bind-Value="ventas.VentaId" class="form-control col-4" />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-primary" @onclick="Buscar"><i class="fa fa-search"></i> Buscar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        @* Cliente id *@
                        <div class="col">
                            <label>Cliente ID:</label>
                            <select class="form-control" @bind="ClienteSelecionado" @onclick="MostrarNombreCliente">
                                @foreach (var item in ClienteCombo())
                                {
                                    <option value="@item.ClienteId">@item.ClienteId</option>
                                }
                            </select>
                        </div>
                        @* cliente *@
                        <div class="col">
                            <label>El Cliente:</label>
                            <InputText class="form-control" readonly="true" @bind-Value="nombreCliente" />
                        </div>
                    </div>
                </div>

            </form>
        </div>
    </div>
</EditForm>

@code
{
    [Parameter]
    public int VentaId { get; set; }

    Ventas ventas = new Ventas();

    @*Datos Del Cliente*@
public int ClienteSelecionado { get; set; }
public string nombreCliente { get; set; }

protected override void OnInitialized()
{
    Nuevo();
    if (VentaId > 0)
    {
        var Auxventas = VentasBLL.Buscar(VentaId);
        if (Auxventas != null)
            this.ventas = Auxventas;
        else
            toast.ShowWarning("No encontrado.");
    }
}

private void Nuevo()
{
    this.ventas = new Ventas();

}

private void Buscar()
{
    if (ventas.VentaId > 0)
    {
        var encontrado = VentasBLL.Buscar(ventas.VentaId);

        if (encontrado != null)
            this.ventas = encontrado;
        else
            toast.ShowWarning("No encontrado");
    }
}

private void Guardar()
{
    bool guardo;

    guardo = VentasBLL.Guardar(ventas);

    if (guardo)
    {
        Nuevo();
        toast.ShowSuccess("Guardado correctamente");
    }
    else
        toast.ShowError("No fue posible guardar");
}

private void Eliminar()
{
    bool elimino;

    elimino = VentasBLL.Eliminar(ventas.VentaId);

    if (elimino)
    {
        Nuevo();
        toast.ShowSuccess("Eliminado correctamente");
    }
    else
        toast.ShowError("No fue posible eliminar");
}

private List<Clientes> ClienteCombo()
{
    List<Clientes> lista = new List<Clientes>();

    try
    {
        lista = ClientesBLL.GetList(c => true);
    }
    catch (Exception)
    {
        throw;
    }

    return lista;
}

private void MostrarNombreCliente()
{
    string auxVenta = string.Empty;

    var auxCliente = ClientesBLL.Buscar(ClienteSelecionado);
    if (auxCliente != null)
    {
        auxVenta = ClientesBLL.Buscar(auxCliente.ClienteId).Nombre;
        nombreCliente = auxVenta;
    }
}
}