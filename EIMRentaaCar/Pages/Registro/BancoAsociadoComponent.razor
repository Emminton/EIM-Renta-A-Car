@page "/Bancos"
@page "/Bancos/{BancoId:int}"

@using EIMRentaaCar.Models
@using EIMRentaaCar.BLL

@inject IToastService toast


<EditForm Model="bancosAsociados" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h1>Registro de Clientes</h1>
        </div>

        @*Banco Asociado Id y boton al lado*@
        <div class="card-body">
            <form />
            <div class="form-row align-items-center">
                <div class="col">
                    <div class="form-group">
                        <label>ID</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="bancosAsociados.BancoAsociadoId" class="form-control col-4" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary" @onclick="Buscar"><i class="fa fa-search"></i> Buscar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @*Nombres*@
            <div class="form-group">
                <label>Nombre</label>
                <InputText @bind-Value="bancosAsociados.Nombre" class="form-control" />
                <ValidationMessage For="@(() => bancosAsociados.Nombre)" />
            </div>

            @*Telefono*@
            <div class="form-group">
                <label>Teléfono </label>
                <InputText @bind-Value="bancosAsociados.Telefono" class="form-control" />
                <ValidationMessage For="@(() => bancosAsociados.Telefono)" />
            </div>

            @*Gmail*@
            <div class="form-group">
                <label>Email</label>
                <InputText @bind-Value="bancosAsociados.Email" class="form-control" />
                <ValidationMessage For="@(() => bancosAsociados.Email)" />
            </div>

            @*Pagina Web*@
            <div class="form-group">
                <label>Pagina Web</label>
                <InputText @bind-Value="bancosAsociados.PaginaWeb" class="form-control" />
                <ValidationMessage For="@(() => bancosAsociados.PaginaWeb)" />
            </div>
        </div>

        @*Botones*@
        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo"><i class="fa fa-plus"></i> Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success"><i class="fa fa-save"></i> Guardar</button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar"><i class="fa fa-trash"></i> Eliminar</button>
            </div>
        </div>

    </div>
</EditForm>


@code
{
    [Parameter]
    public int BancoId { get; set; }

    BancosAsociados bancosAsociados = new BancosAsociados();

    protected override void OnInitialized()
    {
        Nuevo();
        if (BancoId > 0)
        {
            var AuxbancosAsociados = BancoAsociadoBLL.Buscar(BancoId);
            if (AuxbancosAsociados != null)
                this.bancosAsociados = AuxbancosAsociados;
            else
                toast.ShowWarning("No encontrado.");
        }
    }

    private void Nuevo()
    {
        this.bancosAsociados = new BancosAsociados();

    }

    private void Buscar()
    {
        if (bancosAsociados.BancoAsociadoId > 0)
        {
            var encontrado = BancoAsociadoBLL.Buscar(bancosAsociados.BancoAsociadoId);

            if (encontrado != null)
                this.bancosAsociados = encontrado;
            else
                toast.ShowWarning("No encontrado");
        }
    }

    private void Guardar()
    {
        bool guardo;

        guardo = BancoAsociadoBLL.Guardar(bancosAsociados);

        if (guardo)
        {
            Nuevo();
            toast.ShowSuccess("Guardado correctamente");
        }
        else
            toast.ShowError("No fue posible guardar");
    }

    private void Eliminar()
    {
        bool elimino;

        elimino = BancoAsociadoBLL.Eliminar(bancosAsociados.BancoAsociadoId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
            toast.ShowError("No fue posible eliminar");
    }
}