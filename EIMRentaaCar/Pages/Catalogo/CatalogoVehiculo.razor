@page "/Catalogo"

@using EIMRentaaCar.BLL
@using EIMRentaaCar.Models

@inject IToastService toast

<EditForm Model="listapaginada">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h3>Catalogo de Vehiculo</h3>
        </div>

        <div class="card-body">
            <div class="input-group mb-4">
                <div class="input-group">

                    <label for="filtro">Filtro: </label>
                    <select class="form-control ml-3 mr-3" @bind="Filtro">
                        <option value="" disabled selected>Seleccione un filtro</option>
                        <option value="Todo">Todo</option>
                        <option value="Año">Año</option>
                        <option value="Marca">Marca</option>
                        <option value="Modelo">Modelo</option>
                        <option value="Tipo">Tipo</option>
                    </select>

                    <label for="criterio ml-3 mr-3"> Criterio: </label>
                    <input type="search" class="form-control ml-3 mr-3" @bind-value="Criterio" />
                    <button type="button" class="btn btn-primary" @onclick="Buscar">Buscar </button>
                </div>
            </div>

            <div class="row">
                @foreach (var item in listapaginada)
                {
                    
                        <div class="col-4">
                            <div class="card">
                                <img class="card-img-top" src="/Imagen/vehiculos.jpg" />
                                <div class="card-body">
                                    <div class="card-title">
                                        <strong>@item.Marca</strong>   <strong>@item.Modelo</strong>
                                    </div>
                                    <div class="card-text">
                                        <span>Estado: @item.Estado</span>
                                        <br />
                                        <span>Precio: @item.PrecioVenta</span>
                                        <br />
                                        <span>Año: @item.Año</span>
                                    </div>
                                </div>
                                <div class="card-footer">
                                    <a class="btn btn-primary" href="Vehiculos/@item.VehiculoId">Ver</a>
                                </div>
                            </div>
                        </div>
                    
                }
            </div>
        </div>
        <div class="form-row col-12 justify-content-center">
            <nav>
                <ul class="pagination">
                    <li class="page-item bt">
                        <a class="page-link" @onclick="PaginaAnterior">
                            <span class="oi oi-media-skip-backward "></span>
                        </a>
                    </li>

                    @for (int i = 1; i <= Paginas; i++)
                    {
                        <li class=" @(PaginaActual == i ? "text-danger" : "page-item")" @onclick="Mover"> <a class="page-link disabled">@i</a></li>

                    }

                    <li class="page-item">
                        <a class="page-link" @onclick="PaginaSiguiente">
                            <span class="oi oi-media-skip-forward "></span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</EditForm>

@code {
    private List<Vehiculos> lista { get; set; }
    private List<Vehiculos> listapaginada { get; set; }

    double Paginas = 0;
    double Elementos = 0;
    int PaginaActual = 0;

    Paginacion paginacion = new Paginacion();
    private string Filtro { get; set; }
    private string Criterio { get; set; }


    protected override void OnInitialized()
    {
        lista = VehiculosBLL.GetList(C => true);
        Filtro = "Todo";
        IniciarPaginacion();
    }

    public void IniciarPaginacion()
    {
        PaginaActual = 1;
        Elementos = lista.Count();
        Paginas = Math.Ceiling(Elementos / paginacion.Mostrar);
        listapaginada = lista.Take(paginacion.Mostrar).ToList();
    }

    private void PaginaSiguiente()
    {
        if (PaginaActual < Paginas)
        {
            PaginaActual++;
            listapaginada = lista
                .Skip((PaginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();
        }
    }

    private void Mover()
    {
        if (PaginaActual < Paginas)
        {
            PaginaActual++;
            listapaginada = lista
                .Skip((PaginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();
        }
        else if (PaginaActual > 1)
        {
            PaginaActual--;
            listapaginada = lista
                .Skip((PaginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();
        }
    }


    private void PaginaAnterior()
    {
        if (PaginaActual > 1)
        {
            PaginaActual--;
            listapaginada = lista
                .Skip((PaginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();
        }
    }

    private void Buscar()
    {
        try
        {
            if (Filtro == null)
            {
                toast.ShowWarning("Debe seleccionar un Filtro", "Aviso");
            }
            else
            {

                if (lista.Count == 0)
                {
                    toast.ShowWarning("No hay Articulos Registrados", "Aviso");
                }
                else
                {

                    switch (Filtro)
                    {
                        case "Todo":
                            listapaginada = VehiculosBLL.GetList(e => true);
                            IniciarPaginacion();
                            break;
                        case "Año":
                            listapaginada = VehiculosBLL.GetList(e => e.Año == Convert.ToInt32(Criterio));
                            break;
                        case "Marca":
                            listapaginada = VehiculosBLL.GetList(e => e.Marca == Criterio);
                            break;
                        case "Modelo":
                            listapaginada = VehiculosBLL.GetList(e => e.Modelo == Criterio);
                            break;
                        case "Tipo":
                            listapaginada = VehiculosBLL.GetList(e => e.Tipo == Criterio);
                            break;
                    }
                }
            }
        }
        catch (Exception)
        {
            throw;
        }
    }
}

@code {

}
